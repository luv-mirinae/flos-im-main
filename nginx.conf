user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;


events {
    worker_connections 1024;
}


http {
    # Hide Nginx version information.
    server_tokens off;

    # Specify media (MIME) types for files.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Include $http_x_forwarded_for within default format used in log files
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    # Log access to this file
    access_log /var/log/nginx/access.log main;

    # How long to allow each connection to stay idle.
    keepalive_timeout 20;

    # Speed up file transfers by using `sendfile()` to copy directly between
    # descriptors rather than using `read()`/`write()``.
    sendfile on;

    # Don't send out partial frames; this increases throughput since TCP frames
    # are filled up before being sent out.
    tcp_nopush on;

    # Enable gzip compression.
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types application/atom+xml application/geo+json application/javascript application/x-javascript application/json application/ld+json application/manifest+json application/rdf+xml application/rss+xml application/vnd.ms-fontobject application/wasm application/x-web-app-manifest+json application/xhtml+xml application/xml font/eot font/otf font/ttf image/bmp image/svg+xml image/vnd.microsoft.icon image/x-icon text/cache-manifest text/calendar text/css text/javascript text/markdown text/plain text/xml text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

    # Specify file cache expiration.
    map $sent_http_content_type $expires {
        # Default: Fallback
        default 1y;

        # Default: No content
        "" off;

        # Specific: Assets
        ~*image/svg\+xml 1y;
        ~*image/vnd.microsoft.icon 1w;
        ~*image/x-icon 1w;

        # Specific: Manifests
        ~*application/manifest\+json 1w;
        ~*text/cache-manifest epoch;

        # Specific: Data interchange
        ~*application/atom\+xml 1h;
        ~*application/rdf\+xml 1h;
        ~*application/rss\+xml 1h;

        # Specific: Documents
        ~*text/html epoch;
        ~*text/markdown epoch;
        ~*text/calendar epoch;

        # Specific: Other
        ~*text/x-cross-domain-policy 1w;

        # Generic: Data
        ~*json epoch;
        ~*xml epoch;
    }
    expires $expires;

    # Add X-Frame-Options for HTML documents.
    map $sent_http_content_type $x_frame_options {
        ~*text/html DENY;
    }
    add_header X-Frame-Options $x_frame_options always;

    # Add Content-Security-Policy for HTML documents.
    map $sent_http_content_type $content_security_policy {
        ~*text/(html|javascript)|application/pdf|xml "default-src 'self'; base-uri 'none'; form-action 'self'; frame-ancestors 'none'; object-src 'none'; upgrade-insecure-requests";
    }
    # add_header Content-Security-Policy $content_security_policy always;

    # Add Permissions-Policy for HTML documents.
    map $sent_http_content_type $permissions_policy {
        ~*text/(html|javascript)|application/pdf|xml "accelerometer=(),autoplay=(),browsing-topics=(),camera=(),display-capture=(),encrypted-media=(),fullscreen=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),midi=(),payment=(),picture-in-picture=(),publickey-credentials-get=(),screen-wake-lock=(),sync-xhr=(self),usb=(),xr-spatial-tracking=()";
    }
    add_header Permissions-Policy $permissions_policy always;

    # Add Referrer-Policy for HTML documents.
    map $sent_http_content_type $referrer_policy {
        ~*text/(css|html|javascript)|application\/pdf|xml "strict-origin-when-cross-origin";
    }
    add_header Referrer-Policy $referrer_policy always;

    # Add Cross-Origin-Embedder-Policy for HTML documents.
    map $sent_http_content_type $coep_policy {
        ~*text/(html|javascript)|application/pdf|xml "require-corp";
    }
    add_header Cross-Origin-Embedder-Policy $coep_policy always;

    # Add Cross-Origin-Opener-Policy for HTML documents.
    map $sent_http_content_type $coop_policy {
        ~*text/(html|javascript)|application/pdf|xml "same-origin";
    }
    add_header Cross-Origin-Opener-Policy $coop_policy always;

    # Add Cross-Origin-Resource-Policy for HTML documents.
    map $sent_http_content_type $corp_policy {
        ~*text/(html|javascript)|application/pdf|xml "same-origin";
    }
    add_header Cross-Origin-Resource-Policy $corp_policy always;

    # Add Access-Control-Allow-Origin.
    map $sent_http_content_type $cors {
        # Images
        ~*image/ "*";

        # Web fonts
        ~*font/ "*";
        ~*application/vnd.ms-fontobject "*";
        ~*application/x-font-ttf "*";
        ~*application/font-woff "*";
        ~*application/x-font-woff "*";
        ~*application/font-woff2 "*";
    }
    add_header Access-Control-Allow-Origin $cors;

    include /etc/nginx/conf.d/*.conf;
}
